This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2024-12-18T21:09:41.840Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repomix, visit: https://github.com/yamadashy/repomix

================================================================
Repository Structure
================================================================
packages/
  shared-types/
    .github/
      workflows/
        release.yml
    src/
      index.ts
    .gitignore
    package.json
    README.md
    release.config.js
    tsconfig.json
    tsup.config.ts
.gitignore
package.json
pnpm-workspace.yaml

================================================================
Repository Files
================================================================

================
File: packages/shared-types/.github/workflows/release.yml
================
name: üöÄ Release

on:
  push:
    branches:
      - main
      - next

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    name: üì¶ Release
    runs-on: ubuntu-latest
    steps:
      - name: üìö Checkout
        uses: actions/checkout@v4

      - name: üõ†Ô∏è Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: üì¶ Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: üîß Install dependencies
        run: pnpm install

      - name: üèóÔ∏è Build
        run: pnpm run build

      - name: üöÄ Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm semantic-release

================
File: packages/shared-types/src/index.ts
================
export type SuccessResponse<T = void> = {
  success: true;
  message: string;
} & (T extends void ? {} : { data: T });

export type ErrorResponse = {
  success: false;
  error: string;
  isFormError?: boolean;
};

export type ApiResponse<T = void> = SuccessResponse<T> | ErrorResponse;

================
File: packages/shared-types/.gitignore
================
dist
node_modules

================
File: packages/shared-types/package.json
================
{
  "name": "@neptrek/shared-types",
  "version": "0.0.0-development",
  "author": "Sameer Thapa",
  "main": "./dist/index.js",
  "module": "./dist/index.mjs",
  "types": "./dist/index.d.ts",
  "files": [
    "dist",
    "README.md"
  ],
  "devDependencies": {
    "semantic-release": "^24.2.0",
    "tsup": "^8.3.5",
    "typescript": "^5.7.2"
  },
  "description": "üåä Shared TypeScript types for the Neptrek project",
  "license": "ISC",
  "scripts": {
    "build": "tsup",
    "dev": "tsup --watch",
    "typecheck": "tsc --noEmit",
    "semantic-release": "semantic-release"
  },
  "publishConfig": {
    "access": "public"
  }
}

================
File: packages/shared-types/README.md
================
# üåä @neptrek/shared-types

Welcome to the depths of type safety! This package contains the shared TypeScript types that keep the Neptrek project sailing smoothly. 

## üßú‚Äç‚ôÇÔ∏è What's Inside?

Just like Neptune's trident has three points, we have three main types:
- `SuccessResponse<T>` - For when everything goes swimmingly
- `ErrorResponse` - For when we hit rough waters
- More types coming soon... the ocean is deep!

## üö¢ Installation

Drop your anchor and install with your favorite package manager:

```bash
# Using pnpm (preferred)
pnpm add @neptrek/shared-types

# Using npm
npm install @neptrek/shared-types

# Using yarn
yarn add @neptrek/shared-types
```

## üåä Usage

Import types as easily as a fish takes to water:

```typescript
import type { SuccessResponse, ErrorResponse } from '@neptrek/shared-types';

// Success Response Example
const success: SuccessResponse<{ id: string }> = {
  success: true,
  message: "Smooth sailing!",
  data: { id: "neptune-123" }
};

// Error Response Example
const error: ErrorResponse = {
  success: false,
  error: "Hit an iceberg!",
  isFormError: true
};
```

## üèä‚Äç‚ôÇÔ∏è Development

```bash
# Install dependencies
pnpm install

# Build
pnpm build

# Watch mode
pnpm dev
```

## üåä License

ISC - As free as the ocean!

---
Made with üåä by the Qriousco team

================
File: packages/shared-types/release.config.js
================
module.exports = {
  branches: ["main", { name: "next", prerelease: true }],
};

================
File: packages/shared-types/tsconfig.json
================
{
    "compilerOptions": {
      "lib": ["ESNext", "DOM"],
      "rootDir": "src",
      "outDir": "dist",
      "target": "ESNext",
      "module": "ESNext",
      "moduleDetection": "force",
      "jsx": "react-jsx",
      "allowJs": true,
      "moduleResolution": "bundler",
      "verbatimModuleSyntax": true,
      "strict": true,
      "skipLibCheck": true,
      "noFallthroughCasesInSwitch": true,
      "noUnusedLocals": false,
      "noUnusedParameters": false,
      "noPropertyAccessFromIndexSignature": false
    },
    "exclude": ["release.config.cjs", "dist", "node_modules"],
    "include": ["src"]
  }

================
File: packages/shared-types/tsup.config.ts
================
import { defineConfig } from "tsup";

export default defineConfig({
  entry: ["src/index.ts"],
  format: ["cjs", "esm"],
  dts: true,
  clean: true,
  minify: true,
  splitting: false,
  sourcemap: true,
  treeshake: true,
});

================
File: .gitignore
================
node_modules

================
File: package.json
================
{
  "name": "neptrek",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "dev": "concurrently \"pnpm run dev:server\" \"pnpm run dev:web\"",
    "dev:server": "pnpm run dev -w server",
    "dev:web": "pnpm run dev -w web",
    "build": "pnpm run build --workspaces"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "concurrently": "^9.1.0",
    "typescript": "^5.7.2"
  }
}

================
File: pnpm-workspace.yaml
================
packages:
  - 'packages/*'
